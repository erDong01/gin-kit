// Code generated by protoc-gen-go. DO NOT EDIT.
// source: exam.proto

package exam

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ClassworkRequest struct {
	StudentUserNo        int64                `protobuf:"varint,1,opt,name=student_user_no,json=studentUserNo,proto3" json:"student_user_no,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ClassworkRequest) Reset()         { *m = ClassworkRequest{} }
func (m *ClassworkRequest) String() string { return proto.CompactTextString(m) }
func (*ClassworkRequest) ProtoMessage()    {}
func (*ClassworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_70e600da0d9a195d, []int{0}
}

func (m *ClassworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClassworkRequest.Unmarshal(m, b)
}
func (m *ClassworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClassworkRequest.Marshal(b, m, deterministic)
}
func (m *ClassworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClassworkRequest.Merge(m, src)
}
func (m *ClassworkRequest) XXX_Size() int {
	return xxx_messageInfo_ClassworkRequest.Size(m)
}
func (m *ClassworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClassworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClassworkRequest proto.InternalMessageInfo

func (m *ClassworkRequest) GetStudentUserNo() int64 {
	if m != nil {
		return m.StudentUserNo
	}
	return 0
}

func (m *ClassworkRequest) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type ClassworkResponse struct {
	Work                 []*Work  `protobuf:"bytes,1,rep,name=work,proto3" json:"work,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClassworkResponse) Reset()         { *m = ClassworkResponse{} }
func (m *ClassworkResponse) String() string { return proto.CompactTextString(m) }
func (*ClassworkResponse) ProtoMessage()    {}
func (*ClassworkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_70e600da0d9a195d, []int{1}
}

func (m *ClassworkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClassworkResponse.Unmarshal(m, b)
}
func (m *ClassworkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClassworkResponse.Marshal(b, m, deterministic)
}
func (m *ClassworkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClassworkResponse.Merge(m, src)
}
func (m *ClassworkResponse) XXX_Size() int {
	return xxx_messageInfo_ClassworkResponse.Size(m)
}
func (m *ClassworkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClassworkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClassworkResponse proto.InternalMessageInfo

func (m *ClassworkResponse) GetWork() []*Work {
	if m != nil {
		return m.Work
	}
	return nil
}

type Work struct {
	SubjectName          string               `protobuf:"bytes,1,opt,name=subject_name,json=subjectName,proto3" json:"subject_name,omitempty"`
	CourseNo             int64                `protobuf:"varint,2,opt,name=course_no,json=courseNo,proto3" json:"course_no,omitempty"`
	ClassNo              int64                `protobuf:"varint,3,opt,name=class_no,json=classNo,proto3" json:"class_no,omitempty"`
	ClassName            string               `protobuf:"bytes,4,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	CourseItemOrder      int32                `protobuf:"varint,5,opt,name=course_item_order,json=courseItemOrder,proto3" json:"course_item_order,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Exam                 []*Exam              `protobuf:"bytes,7,rep,name=exam,proto3" json:"exam,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Work) Reset()         { *m = Work{} }
func (m *Work) String() string { return proto.CompactTextString(m) }
func (*Work) ProtoMessage()    {}
func (*Work) Descriptor() ([]byte, []int) {
	return fileDescriptor_70e600da0d9a195d, []int{2}
}

func (m *Work) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Work.Unmarshal(m, b)
}
func (m *Work) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Work.Marshal(b, m, deterministic)
}
func (m *Work) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Work.Merge(m, src)
}
func (m *Work) XXX_Size() int {
	return xxx_messageInfo_Work.Size(m)
}
func (m *Work) XXX_DiscardUnknown() {
	xxx_messageInfo_Work.DiscardUnknown(m)
}

var xxx_messageInfo_Work proto.InternalMessageInfo

func (m *Work) GetSubjectName() string {
	if m != nil {
		return m.SubjectName
	}
	return ""
}

func (m *Work) GetCourseNo() int64 {
	if m != nil {
		return m.CourseNo
	}
	return 0
}

func (m *Work) GetClassNo() int64 {
	if m != nil {
		return m.ClassNo
	}
	return 0
}

func (m *Work) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *Work) GetCourseItemOrder() int32 {
	if m != nil {
		return m.CourseItemOrder
	}
	return 0
}

func (m *Work) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Work) GetExam() []*Exam {
	if m != nil {
		return m.Exam
	}
	return nil
}

type Exam struct {
	ExamNo               int64                `protobuf:"varint,1,opt,name=exam_no,json=examNo,proto3" json:"exam_no,omitempty"`
	ExamStatus           int32                `protobuf:"varint,2,opt,name=exam_status,json=examStatus,proto3" json:"exam_status,omitempty"`
	ExamTypeCode         int32                `protobuf:"varint,3,opt,name=exam_type_code,json=examTypeCode,proto3" json:"exam_type_code,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExamClassOrder       int32                `protobuf:"varint,5,opt,name=exam_class_order,json=examClassOrder,proto3" json:"exam_class_order,omitempty"`
	Question             *Question            `protobuf:"bytes,6,opt,name=question,proto3" json:"question,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Exam) Reset()         { *m = Exam{} }
func (m *Exam) String() string { return proto.CompactTextString(m) }
func (*Exam) ProtoMessage()    {}
func (*Exam) Descriptor() ([]byte, []int) {
	return fileDescriptor_70e600da0d9a195d, []int{3}
}

func (m *Exam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Exam.Unmarshal(m, b)
}
func (m *Exam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Exam.Marshal(b, m, deterministic)
}
func (m *Exam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Exam.Merge(m, src)
}
func (m *Exam) XXX_Size() int {
	return xxx_messageInfo_Exam.Size(m)
}
func (m *Exam) XXX_DiscardUnknown() {
	xxx_messageInfo_Exam.DiscardUnknown(m)
}

var xxx_messageInfo_Exam proto.InternalMessageInfo

func (m *Exam) GetExamNo() int64 {
	if m != nil {
		return m.ExamNo
	}
	return 0
}

func (m *Exam) GetExamStatus() int32 {
	if m != nil {
		return m.ExamStatus
	}
	return 0
}

func (m *Exam) GetExamTypeCode() int32 {
	if m != nil {
		return m.ExamTypeCode
	}
	return 0
}

func (m *Exam) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Exam) GetExamClassOrder() int32 {
	if m != nil {
		return m.ExamClassOrder
	}
	return 0
}

func (m *Exam) GetQuestion() *Question {
	if m != nil {
		return m.Question
	}
	return nil
}

type Question struct {
	Total                int32    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Error                int32    `protobuf:"varint,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Question) Reset()         { *m = Question{} }
func (m *Question) String() string { return proto.CompactTextString(m) }
func (*Question) ProtoMessage()    {}
func (*Question) Descriptor() ([]byte, []int) {
	return fileDescriptor_70e600da0d9a195d, []int{4}
}

func (m *Question) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Question.Unmarshal(m, b)
}
func (m *Question) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Question.Marshal(b, m, deterministic)
}
func (m *Question) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Question.Merge(m, src)
}
func (m *Question) XXX_Size() int {
	return xxx_messageInfo_Question.Size(m)
}
func (m *Question) XXX_DiscardUnknown() {
	xxx_messageInfo_Question.DiscardUnknown(m)
}

var xxx_messageInfo_Question proto.InternalMessageInfo

func (m *Question) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Question) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func init() {
	proto.RegisterType((*ClassworkRequest)(nil), "exam.ClassworkRequest")
	proto.RegisterType((*ClassworkResponse)(nil), "exam.ClassworkResponse")
	proto.RegisterType((*Work)(nil), "exam.Work")
	proto.RegisterType((*Exam)(nil), "exam.Exam")
	proto.RegisterType((*Question)(nil), "exam.Question")
}

func init() { proto.RegisterFile("exam.proto", fileDescriptor_70e600da0d9a195d) }

var fileDescriptor_70e600da0d9a195d = []byte{
	// 475 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xdf, 0x6b, 0xd4, 0x40,
	0x10, 0xc7, 0xc9, 0x5d, 0x72, 0x3f, 0xe6, 0x6a, 0x7f, 0x2c, 0x62, 0xe3, 0x89, 0xf6, 0x3c, 0x44,
	0x42, 0x1f, 0x52, 0xb8, 0x82, 0x20, 0xf8, 0x22, 0xc5, 0x07, 0x11, 0x22, 0x6e, 0x2b, 0x3e, 0x86,
	0xbd, 0x64, 0x2c, 0x57, 0x2f, 0xd9, 0xb8, 0xbb, 0xd1, 0xf6, 0x2f, 0xf0, 0x4f, 0xf6, 0x55, 0x66,
	0x36, 0x57, 0x8f, 0xfa, 0x20, 0x7d, 0xcb, 0x7c, 0x66, 0x98, 0xef, 0x7e, 0xbf, 0x19, 0x00, 0xbc,
	0x56, 0x55, 0xda, 0x18, 0xed, 0xb4, 0x08, 0xe9, 0x7b, 0x7a, 0x74, 0xa9, 0xf5, 0xe5, 0x1a, 0x4f,
	0x98, 0x2d, 0xdb, 0xaf, 0x27, 0x6e, 0x55, 0xa1, 0x75, 0xaa, 0x6a, 0xfc, 0xd8, 0xfc, 0x0a, 0xf6,
	0xcf, 0xd6, 0xca, 0xda, 0x9f, 0xda, 0x7c, 0x93, 0xf8, 0xbd, 0x45, 0xeb, 0xc4, 0x4b, 0xd8, 0xb3,
	0xae, 0x2d, 0xb1, 0x76, 0x79, 0x6b, 0xd1, 0xe4, 0xb5, 0x8e, 0x83, 0x59, 0x90, 0xf4, 0xe5, 0x83,
	0x0e, 0x7f, 0xb6, 0x68, 0x32, 0x2d, 0x52, 0x08, 0x69, 0x5d, 0xdc, 0x9b, 0x05, 0xc9, 0x64, 0x31,
	0x4d, 0xbd, 0x56, 0xba, 0xd1, 0x4a, 0x2f, 0x36, 0x5a, 0x92, 0xe7, 0xe6, 0xa7, 0x70, 0xb0, 0xa5,
	0x65, 0x1b, 0x5d, 0x5b, 0x14, 0xcf, 0x20, 0xa4, 0x3a, 0x0e, 0x66, 0xfd, 0x64, 0xb2, 0x80, 0x94,
	0x2d, 0x7c, 0xa1, 0x09, 0xe6, 0xf3, 0x5f, 0x3d, 0x08, 0xa9, 0x14, 0xcf, 0x61, 0xc7, 0xb6, 0xcb,
	0x2b, 0x2c, 0x5c, 0x5e, 0xab, 0x0a, 0xf9, 0x49, 0x63, 0x39, 0xe9, 0x58, 0xa6, 0x2a, 0x14, 0x4f,
	0x60, 0x5c, 0xe8, 0xd6, 0x58, 0xa4, 0x27, 0xf7, 0xf8, 0xc9, 0x23, 0x0f, 0x32, 0x2d, 0x1e, 0xc3,
	0xa8, 0x20, 0x75, 0xea, 0xf5, 0xb9, 0x37, 0xe4, 0x3a, 0xd3, 0xe2, 0x29, 0x40, 0xd7, 0xa2, 0xc5,
	0x21, 0x2f, 0x1e, 0xfb, 0x26, 0xad, 0x3d, 0x86, 0x83, 0x6e, 0xed, 0xca, 0x61, 0x95, 0x6b, 0x53,
	0xa2, 0x89, 0xa3, 0x59, 0x90, 0x44, 0x72, 0xcf, 0x37, 0xde, 0x3b, 0xac, 0x3e, 0x12, 0x16, 0xaf,
	0x01, 0x0a, 0x83, 0xca, 0x61, 0x99, 0x2b, 0x17, 0x0f, 0xfe, 0x9b, 0xcc, 0xb8, 0x9b, 0x7e, 0xeb,
	0x28, 0x09, 0x32, 0x1f, 0x0f, 0xb7, 0x93, 0x78, 0x77, 0xad, 0x2a, 0xc9, 0x7c, 0xfe, 0x3b, 0x80,
	0x90, 0x4a, 0x71, 0x08, 0x43, 0x02, 0x7f, 0xff, 0xcb, 0x80, 0xca, 0x4c, 0x8b, 0x23, 0x98, 0x70,
	0xc3, 0x3a, 0xe5, 0x5a, 0xcb, 0x09, 0x44, 0x92, 0x8f, 0xe2, 0x9c, 0x89, 0x78, 0x01, 0xbb, 0x3c,
	0xe0, 0x6e, 0x1a, 0xcc, 0x0b, 0x5d, 0x22, 0x27, 0x11, 0xc9, 0x1d, 0xa2, 0x17, 0x37, 0x0d, 0x9e,
	0xe9, 0x12, 0xef, 0x78, 0x08, 0xef, 0xe3, 0x21, 0x81, 0x7d, 0x16, 0xf0, 0x71, 0x6e, 0x27, 0xc5,
	0xc2, 0xfc, 0xfb, 0x7d, 0x50, 0xc7, 0x30, 0xe2, 0x6b, 0x5b, 0xe9, 0xba, 0x8b, 0x69, 0xd7, 0x3b,
	0xfe, 0xd4, 0x51, 0x79, 0xdb, 0x9f, 0xbf, 0x82, 0xd1, 0x86, 0x8a, 0x87, 0x10, 0x39, 0xed, 0xd4,
	0x9a, 0xad, 0x47, 0xd2, 0x17, 0x44, 0xd1, 0x18, 0x6d, 0x3a, 0xcf, 0xbe, 0x58, 0x7c, 0x80, 0x09,
	0x05, 0x76, 0x8e, 0xe6, 0xc7, 0xaa, 0x40, 0xf1, 0x06, 0xc6, 0xb7, 0xf7, 0x27, 0x1e, 0x79, 0xb5,
	0xbb, 0xc7, 0x3f, 0x3d, 0xfc, 0x87, 0xfb, 0x43, 0x5d, 0x0e, 0xd8, 0xf9, 0xe9, 0x9f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x19, 0x4f, 0xba, 0xc6, 0x65, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExamServiceClient is the client API for ExamService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExamServiceClient interface {
	Classwork(ctx context.Context, in *ClassworkRequest, opts ...grpc.CallOption) (*ClassworkResponse, error)
}

type examServiceClient struct {
	cc *grpc.ClientConn
}

func NewExamServiceClient(cc *grpc.ClientConn) ExamServiceClient {
	return &examServiceClient{cc}
}

func (c *examServiceClient) Classwork(ctx context.Context, in *ClassworkRequest, opts ...grpc.CallOption) (*ClassworkResponse, error) {
	out := new(ClassworkResponse)
	err := c.cc.Invoke(ctx, "/exam.ExamService/Classwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExamServiceServer is the server API for ExamService service.
type ExamServiceServer interface {
	Classwork(context.Context, *ClassworkRequest) (*ClassworkResponse, error)
}

func RegisterExamServiceServer(s *grpc.Server, srv ExamServiceServer) {
	s.RegisterService(&_ExamService_serviceDesc, srv)
}

func _ExamService_Classwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClassworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExamServiceServer).Classwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/exam.ExamService/Classwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExamServiceServer).Classwork(ctx, req.(*ClassworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExamService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "exam.ExamService",
	HandlerType: (*ExamServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Classwork",
			Handler:    _ExamService_Classwork_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "exam.proto",
}
