// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package auth

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LogicRequest struct {
	StudentUserLoginName string   `protobuf:"bytes,1,opt,name=student_user_login_name,json=studentUserLoginName,proto3" json:"student_user_login_name,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Ip                   string   `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogicRequest) Reset()         { *m = LogicRequest{} }
func (m *LogicRequest) String() string { return proto.CompactTextString(m) }
func (*LogicRequest) ProtoMessage()    {}
func (*LogicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0}
}

func (m *LogicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogicRequest.Unmarshal(m, b)
}
func (m *LogicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogicRequest.Marshal(b, m, deterministic)
}
func (m *LogicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogicRequest.Merge(m, src)
}
func (m *LogicRequest) XXX_Size() int {
	return xxx_messageInfo_LogicRequest.Size(m)
}
func (m *LogicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogicRequest proto.InternalMessageInfo

func (m *LogicRequest) GetStudentUserLoginName() string {
	if m != nil {
		return m.StudentUserLoginName
	}
	return ""
}

func (m *LogicRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *LogicRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type Token struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	TokenType            string   `protobuf:"bytes,2,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	ExpiresIn            int32    `protobuf:"varint,3,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{1}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *Token) GetTokenType() string {
	if m != nil {
		return m.TokenType
	}
	return ""
}

func (m *Token) GetExpiresIn() int32 {
	if m != nil {
		return m.ExpiresIn
	}
	return 0
}

type Student struct {
	StudentRealName      string   `protobuf:"bytes,1,opt,name=student_real_name,json=studentRealName,proto3" json:"student_real_name,omitempty"`
	StudentSex           int64    `protobuf:"varint,2,opt,name=student_sex,json=studentSex,proto3" json:"student_sex,omitempty"`
	StudentUserNo        int64    `protobuf:"varint,3,opt,name=student_user_no,json=studentUserNo,proto3" json:"student_user_no,omitempty"`
	InClass              int64    `protobuf:"varint,4,opt,name=in_class,json=inClass,proto3" json:"in_class,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Student) Reset()         { *m = Student{} }
func (m *Student) String() string { return proto.CompactTextString(m) }
func (*Student) ProtoMessage()    {}
func (*Student) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{2}
}

func (m *Student) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Student.Unmarshal(m, b)
}
func (m *Student) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Student.Marshal(b, m, deterministic)
}
func (m *Student) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Student.Merge(m, src)
}
func (m *Student) XXX_Size() int {
	return xxx_messageInfo_Student.Size(m)
}
func (m *Student) XXX_DiscardUnknown() {
	xxx_messageInfo_Student.DiscardUnknown(m)
}

var xxx_messageInfo_Student proto.InternalMessageInfo

func (m *Student) GetStudentRealName() string {
	if m != nil {
		return m.StudentRealName
	}
	return ""
}

func (m *Student) GetStudentSex() int64 {
	if m != nil {
		return m.StudentSex
	}
	return 0
}

func (m *Student) GetStudentUserNo() int64 {
	if m != nil {
		return m.StudentUserNo
	}
	return 0
}

func (m *Student) GetInClass() int64 {
	if m != nil {
		return m.InClass
	}
	return 0
}

type LogicResponse struct {
	Token                *Token   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	StudentUserHead      string   `protobuf:"bytes,2,opt,name=student_user_head,json=studentUserHead,proto3" json:"student_user_head,omitempty"`
	Student              *Student `protobuf:"bytes,3,opt,name=student,proto3" json:"student,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogicResponse) Reset()         { *m = LogicResponse{} }
func (m *LogicResponse) String() string { return proto.CompactTextString(m) }
func (*LogicResponse) ProtoMessage()    {}
func (*LogicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{3}
}

func (m *LogicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogicResponse.Unmarshal(m, b)
}
func (m *LogicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogicResponse.Marshal(b, m, deterministic)
}
func (m *LogicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogicResponse.Merge(m, src)
}
func (m *LogicResponse) XXX_Size() int {
	return xxx_messageInfo_LogicResponse.Size(m)
}
func (m *LogicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogicResponse proto.InternalMessageInfo

func (m *LogicResponse) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *LogicResponse) GetStudentUserHead() string {
	if m != nil {
		return m.StudentUserHead
	}
	return ""
}

func (m *LogicResponse) GetStudent() *Student {
	if m != nil {
		return m.Student
	}
	return nil
}

func init() {
	proto.RegisterType((*LogicRequest)(nil), "auth.LogicRequest")
	proto.RegisterType((*Token)(nil), "auth.Token")
	proto.RegisterType((*Student)(nil), "auth.Student")
	proto.RegisterType((*LogicResponse)(nil), "auth.LogicResponse")
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_8bbd6f3875b0e874) }

var fileDescriptor_8bbd6f3875b0e874 = []byte{
	// 367 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x52, 0xc1, 0x4e, 0xe3, 0x30,
	0x14, 0x54, 0xda, 0x66, 0xdb, 0xbe, 0xb4, 0x5b, 0xad, 0x77, 0xa5, 0x0d, 0x95, 0x10, 0x34, 0x07,
	0x40, 0x1c, 0x2a, 0x54, 0xc4, 0x19, 0x21, 0x2e, 0x20, 0xa1, 0x1e, 0xdc, 0x72, 0x8e, 0x4c, 0xfa,
	0xd4, 0x58, 0xa4, 0xb6, 0x1b, 0x3b, 0xd0, 0x7e, 0x01, 0xdf, 0xc0, 0xdf, 0xa2, 0x38, 0x0e, 0xa4,
	0xb7, 0xbc, 0x99, 0x89, 0xe7, 0xcd, 0xd8, 0x00, 0xac, 0x30, 0xe9, 0x54, 0xe5, 0xd2, 0x48, 0xd2,
	0x29, 0xbf, 0xa3, 0x2d, 0x0c, 0x9e, 0xe4, 0x9a, 0x27, 0x14, 0xb7, 0x05, 0x6a, 0x43, 0x6e, 0xe0,
	0xbf, 0x36, 0xc5, 0x0a, 0x85, 0x89, 0x0b, 0x8d, 0x79, 0x9c, 0xc9, 0x35, 0x17, 0xb1, 0x60, 0x1b,
	0x0c, 0xbd, 0x53, 0xef, 0xa2, 0x4f, 0xff, 0x39, 0xfa, 0x59, 0x63, 0x5e, 0xfe, 0x29, 0xe6, 0x6c,
	0x83, 0x64, 0x0c, 0x3d, 0xc5, 0xb4, 0x7e, 0x97, 0xf9, 0x2a, 0x6c, 0x59, 0xdd, 0xf7, 0x4c, 0x7e,
	0x43, 0x8b, 0xab, 0xb0, 0x6d, 0xd1, 0x16, 0x57, 0x51, 0x0a, 0xfe, 0x52, 0xbe, 0xa2, 0x20, 0x13,
	0x18, 0xb0, 0x24, 0x41, 0xad, 0x63, 0x53, 0xce, 0xce, 0x20, 0xa8, 0xb0, 0x4a, 0x72, 0x0c, 0x60,
	0xb9, 0xd8, 0xec, 0x15, 0xba, 0x93, 0xfb, 0x16, 0x59, 0xee, 0x15, 0x96, 0x34, 0xee, 0x14, 0xcf,
	0x51, 0xc7, 0x5c, 0x58, 0x0b, 0x9f, 0xf6, 0x1d, 0xf2, 0x28, 0xa2, 0x4f, 0x0f, 0xba, 0x8b, 0x6a,
	0x5d, 0x72, 0x09, 0x7f, 0xea, 0x60, 0x39, 0xb2, 0xac, 0x19, 0x69, 0xe4, 0x08, 0x8a, 0x2c, 0xb3,
	0x69, 0x4e, 0x20, 0xa8, 0xb5, 0x1a, 0x77, 0xd6, 0xb6, 0x4d, 0xc1, 0x41, 0x0b, 0xdc, 0x91, 0x33,
	0x18, 0x1d, 0xb4, 0x24, 0xa4, 0x35, 0x6f, 0xd3, 0x61, 0xa3, 0x9d, 0xb9, 0x24, 0x47, 0xd0, 0xe3,
	0x22, 0x4e, 0x32, 0xa6, 0x75, 0xd8, 0xb1, 0x82, 0x2e, 0x17, 0xf7, 0xe5, 0x18, 0x7d, 0x78, 0x30,
	0x74, 0xcd, 0x6b, 0x25, 0x85, 0x46, 0x32, 0x01, 0xff, 0xa7, 0x87, 0x60, 0x16, 0x4c, 0xed, 0x65,
	0xd9, 0x1e, 0x68, 0xc5, 0x34, 0x43, 0x58, 0xdf, 0x14, 0x59, 0xdd, 0xf7, 0xa8, 0xe1, 0xfc, 0x80,
	0x6c, 0x45, 0xce, 0xa1, 0xeb, 0x20, 0xbb, 0x5b, 0x30, 0x1b, 0x56, 0x07, 0xba, 0x42, 0x68, 0xcd,
	0xce, 0x6e, 0x21, 0xb8, 0x2b, 0x4c, 0xba, 0xc0, 0xfc, 0x8d, 0x27, 0x48, 0xae, 0xc0, 0xb7, 0xf7,
	0x4a, 0x48, 0xa5, 0x6f, 0x3e, 0x8f, 0xf1, 0xdf, 0x03, 0xac, 0x5a, 0xfc, 0xe5, 0x97, 0x7d, 0x50,
	0xd7, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9e, 0xa1, 0x2e, 0xc1, 0x5e, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	Login(ctx context.Context, in *LogicRequest, opts ...grpc.CallOption) (*LogicResponse, error)
}

type authServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthServiceClient(cc *grpc.ClientConn) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) Login(ctx context.Context, in *LogicRequest, opts ...grpc.CallOption) (*LogicResponse, error) {
	out := new(LogicResponse)
	err := c.cc.Invoke(ctx, "/auth.AuthService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	Login(context.Context, *LogicRequest) (*LogicResponse, error)
}

// UnimplementedAuthServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServiceServer struct {
}

func (*UnimplementedAuthServiceServer) Login(ctx context.Context, req *LogicRequest) (*LogicResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.AuthService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Login(ctx, req.(*LogicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _AuthService_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}
