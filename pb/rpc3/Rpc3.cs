// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rpc3.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Rpc {

  /// <summary>Holder for reflection information generated from rpc3.proto</summary>
  public static partial class Rpc3Reflection {

    #region Descriptor
    /// <summary>File descriptor for rpc3.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Rpc3Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpycGMzLnByb3RvEgNycGMi0AEKB1JwY0hlYWQSCgoCSWQYASABKAMSEAoI",
            "U29ja2V0SWQYAiABKA0SFAoMU3JjQ2x1c3RlcklkGAMgASgNEhEKCUNsdXN0",
            "ZXJJZBgEIAEoDRIkCg5EZXN0U2VydmVyVHlwZRgFIAEoDjIMLnJwYy5TRVJW",
            "SUNFEhsKCFNlbmRUeXBlGAYgASgOMgkucnBjLlNFTkQSEQoJQWN0b3JOYW1l",
            "GAcgASgJEg0KBVJlcGx5GAggASgJEgwKBENvZGUYCSABKAUSCwoDTXNnGAog",
            "ASgJIl0KCVJwY1BhY2tldBIQCghGdW5jTmFtZRgBIAEoCRIOCgZBcmdMZW4Y",
            "AiABKAUSHQoHUnBjSGVhZBgDIAEoCzIMLnJwYy5ScGNIZWFkEg8KB1JwY0Jv",
            "ZHkYBCABKAwiMQoGUGFja2V0EgoKAklkGAEgASgNEg0KBVJlcGx5GAIgASgJ",
            "EgwKBEJ1ZmYYAyABKAwiZQoLQ2x1c3RlckluZm8SGgoEVHlwZRgBIAEoDjIM",
            "LnJwYy5TRVJWSUNFEgoKAklwGAIgASgJEgwKBFBvcnQYAyABKAUSDgoGV2Vp",
            "Z2h0GAQgASgFEhAKCFNvY2tldElkGAUgASgNKnYKB1NFUlZJQ0USCAoETk9O",
            "RRAAEgoKBkNMSUVOVBABEg4KCkdBVEVTRVJWRVIQAhIRCg1BQ0NPVU5UU0VS",
            "VkVSEAMSDwoLV09STERTRVJWRVIQBBIOCgpaT05FU0VSVkVSEAUSEQoNV09S",
            "TEREQlNFUlZFUhAGKi4KBFNFTkQSCQoFUE9JTlQQABILCgdCQUxBTkNFEAES",
            "DgoKQk9BUkRfQ0FTVBACQglaBy4uL3JwYzNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Rpc.SERVICE), typeof(global::Rpc.SEND), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Rpc.RpcHead), global::Rpc.RpcHead.Parser, new[]{ "Id", "SocketId", "SrcClusterId", "ClusterId", "DestServerType", "SendType", "ActorName", "Reply", "Code", "Msg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rpc.RpcPacket), global::Rpc.RpcPacket.Parser, new[]{ "FuncName", "ArgLen", "RpcHead", "RpcBody" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rpc.Packet), global::Rpc.Packet.Parser, new[]{ "Id", "Reply", "Buff" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rpc.ClusterInfo), global::Rpc.ClusterInfo.Parser, new[]{ "Type", "Ip", "Port", "Weight", "SocketId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///服务器类型
  /// </summary>
  public enum SERVICE {
    [pbr::OriginalName("NONE")] None = 0,
    [pbr::OriginalName("CLIENT")] Client = 1,
    /// <summary>
    ///网关,转发服务
    /// </summary>
    [pbr::OriginalName("GATESERVER")] Gateserver = 2,
    /// <summary>
    ///账号
    /// </summary>
    [pbr::OriginalName("ACCOUNTSERVER")] Accountserver = 3,
    /// <summary>
    ///世界
    /// </summary>
    [pbr::OriginalName("WORLDSERVER")] Worldserver = 4,
    /// <summary>
    ///地图
    /// </summary>
    [pbr::OriginalName("ZONESERVER")] Zoneserver = 5,
    /// <summary>
    ///db
    /// </summary>
    [pbr::OriginalName("WORLDDBSERVER")] Worlddbserver = 6,
  }

  /// <summary>
  ///发送标志
  /// </summary>
  public enum SEND {
    /// <summary>
    ///指定集群id
    /// </summary>
    [pbr::OriginalName("POINT")] Point = 0,
    /// <summary>
    ///负载
    /// </summary>
    [pbr::OriginalName("BALANCE")] Balance = 1,
    /// <summary>
    ///广播
    /// </summary>
    [pbr::OriginalName("BOARD_CAST")] BoardCast = 2,
  }

  #endregion

  #region Messages
  public sealed partial class RpcHead : pb::IMessage<RpcHead>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RpcHead> _parser = new pb::MessageParser<RpcHead>(() => new RpcHead());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcHead> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rpc.Rpc3Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcHead() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcHead(RpcHead other) : this() {
      id_ = other.id_;
      socketId_ = other.socketId_;
      srcClusterId_ = other.srcClusterId_;
      clusterId_ = other.clusterId_;
      destServerType_ = other.destServerType_;
      sendType_ = other.sendType_;
      actorName_ = other.actorName_;
      reply_ = other.reply_;
      code_ = other.code_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcHead Clone() {
      return new RpcHead(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    /// <summary>
    ///token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "SocketId" field.</summary>
    public const int SocketIdFieldNumber = 2;
    private uint socketId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SocketId {
      get { return socketId_; }
      set {
        socketId_ = value;
      }
    }

    /// <summary>Field number for the "SrcClusterId" field.</summary>
    public const int SrcClusterIdFieldNumber = 3;
    private uint srcClusterId_;
    /// <summary>
    ///源集群id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SrcClusterId {
      get { return srcClusterId_; }
      set {
        srcClusterId_ = value;
      }
    }

    /// <summary>Field number for the "ClusterId" field.</summary>
    public const int ClusterIdFieldNumber = 4;
    private uint clusterId_;
    /// <summary>
    ///目标集群id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = value;
      }
    }

    /// <summary>Field number for the "DestServerType" field.</summary>
    public const int DestServerTypeFieldNumber = 5;
    private global::Rpc.SERVICE destServerType_ = global::Rpc.SERVICE.None;
    /// <summary>
    ///目标集群
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rpc.SERVICE DestServerType {
      get { return destServerType_; }
      set {
        destServerType_ = value;
      }
    }

    /// <summary>Field number for the "SendType" field.</summary>
    public const int SendTypeFieldNumber = 6;
    private global::Rpc.SEND sendType_ = global::Rpc.SEND.Point;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rpc.SEND SendType {
      get { return sendType_; }
      set {
        sendType_ = value;
      }
    }

    /// <summary>Field number for the "ActorName" field.</summary>
    public const int ActorNameFieldNumber = 7;
    private string actorName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActorName {
      get { return actorName_; }
      set {
        actorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Reply" field.</summary>
    public const int ReplyFieldNumber = 8;
    private string reply_ = "";
    /// <summary>
    ///call sessionid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reply {
      get { return reply_; }
      set {
        reply_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 9;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "Msg" field.</summary>
    public const int MsgFieldNumber = 10;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcHead);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcHead other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (SocketId != other.SocketId) return false;
      if (SrcClusterId != other.SrcClusterId) return false;
      if (ClusterId != other.ClusterId) return false;
      if (DestServerType != other.DestServerType) return false;
      if (SendType != other.SendType) return false;
      if (ActorName != other.ActorName) return false;
      if (Reply != other.Reply) return false;
      if (Code != other.Code) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (SocketId != 0) hash ^= SocketId.GetHashCode();
      if (SrcClusterId != 0) hash ^= SrcClusterId.GetHashCode();
      if (ClusterId != 0) hash ^= ClusterId.GetHashCode();
      if (DestServerType != global::Rpc.SERVICE.None) hash ^= DestServerType.GetHashCode();
      if (SendType != global::Rpc.SEND.Point) hash ^= SendType.GetHashCode();
      if (ActorName.Length != 0) hash ^= ActorName.GetHashCode();
      if (Reply.Length != 0) hash ^= Reply.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (SocketId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SocketId);
      }
      if (SrcClusterId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SrcClusterId);
      }
      if (ClusterId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ClusterId);
      }
      if (DestServerType != global::Rpc.SERVICE.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) DestServerType);
      }
      if (SendType != global::Rpc.SEND.Point) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SendType);
      }
      if (ActorName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ActorName);
      }
      if (Reply.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Reply);
      }
      if (Code != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (SocketId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SocketId);
      }
      if (SrcClusterId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SrcClusterId);
      }
      if (ClusterId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ClusterId);
      }
      if (DestServerType != global::Rpc.SERVICE.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) DestServerType);
      }
      if (SendType != global::Rpc.SEND.Point) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SendType);
      }
      if (ActorName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ActorName);
      }
      if (Reply.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Reply);
      }
      if (Code != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (SocketId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SocketId);
      }
      if (SrcClusterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SrcClusterId);
      }
      if (ClusterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClusterId);
      }
      if (DestServerType != global::Rpc.SERVICE.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DestServerType);
      }
      if (SendType != global::Rpc.SEND.Point) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SendType);
      }
      if (ActorName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActorName);
      }
      if (Reply.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reply);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcHead other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.SocketId != 0) {
        SocketId = other.SocketId;
      }
      if (other.SrcClusterId != 0) {
        SrcClusterId = other.SrcClusterId;
      }
      if (other.ClusterId != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.DestServerType != global::Rpc.SERVICE.None) {
        DestServerType = other.DestServerType;
      }
      if (other.SendType != global::Rpc.SEND.Point) {
        SendType = other.SendType;
      }
      if (other.ActorName.Length != 0) {
        ActorName = other.ActorName;
      }
      if (other.Reply.Length != 0) {
        Reply = other.Reply;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            SocketId = input.ReadUInt32();
            break;
          }
          case 24: {
            SrcClusterId = input.ReadUInt32();
            break;
          }
          case 32: {
            ClusterId = input.ReadUInt32();
            break;
          }
          case 40: {
            DestServerType = (global::Rpc.SERVICE) input.ReadEnum();
            break;
          }
          case 48: {
            SendType = (global::Rpc.SEND) input.ReadEnum();
            break;
          }
          case 58: {
            ActorName = input.ReadString();
            break;
          }
          case 66: {
            Reply = input.ReadString();
            break;
          }
          case 72: {
            Code = input.ReadInt32();
            break;
          }
          case 82: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            SocketId = input.ReadUInt32();
            break;
          }
          case 24: {
            SrcClusterId = input.ReadUInt32();
            break;
          }
          case 32: {
            ClusterId = input.ReadUInt32();
            break;
          }
          case 40: {
            DestServerType = (global::Rpc.SERVICE) input.ReadEnum();
            break;
          }
          case 48: {
            SendType = (global::Rpc.SEND) input.ReadEnum();
            break;
          }
          case 58: {
            ActorName = input.ReadString();
            break;
          }
          case 66: {
            Reply = input.ReadString();
            break;
          }
          case 72: {
            Code = input.ReadInt32();
            break;
          }
          case 82: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RpcPacket : pb::IMessage<RpcPacket>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RpcPacket> _parser = new pb::MessageParser<RpcPacket>(() => new RpcPacket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcPacket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rpc.Rpc3Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcPacket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcPacket(RpcPacket other) : this() {
      funcName_ = other.funcName_;
      argLen_ = other.argLen_;
      rpcHead_ = other.rpcHead_ != null ? other.rpcHead_.Clone() : null;
      rpcBody_ = other.rpcBody_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcPacket Clone() {
      return new RpcPacket(this);
    }

    /// <summary>Field number for the "FuncName" field.</summary>
    public const int FuncNameFieldNumber = 1;
    private string funcName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FuncName {
      get { return funcName_; }
      set {
        funcName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ArgLen" field.</summary>
    public const int ArgLenFieldNumber = 2;
    private int argLen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ArgLen {
      get { return argLen_; }
      set {
        argLen_ = value;
      }
    }

    /// <summary>Field number for the "RpcHead" field.</summary>
    public const int RpcHeadFieldNumber = 3;
    private global::Rpc.RpcHead rpcHead_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rpc.RpcHead RpcHead {
      get { return rpcHead_; }
      set {
        rpcHead_ = value;
      }
    }

    /// <summary>Field number for the "RpcBody" field.</summary>
    public const int RpcBodyFieldNumber = 4;
    private pb::ByteString rpcBody_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString RpcBody {
      get { return rpcBody_; }
      set {
        rpcBody_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcPacket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcPacket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FuncName != other.FuncName) return false;
      if (ArgLen != other.ArgLen) return false;
      if (!object.Equals(RpcHead, other.RpcHead)) return false;
      if (RpcBody != other.RpcBody) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FuncName.Length != 0) hash ^= FuncName.GetHashCode();
      if (ArgLen != 0) hash ^= ArgLen.GetHashCode();
      if (rpcHead_ != null) hash ^= RpcHead.GetHashCode();
      if (RpcBody.Length != 0) hash ^= RpcBody.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FuncName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FuncName);
      }
      if (ArgLen != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ArgLen);
      }
      if (rpcHead_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RpcHead);
      }
      if (RpcBody.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(RpcBody);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FuncName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FuncName);
      }
      if (ArgLen != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ArgLen);
      }
      if (rpcHead_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RpcHead);
      }
      if (RpcBody.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(RpcBody);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FuncName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FuncName);
      }
      if (ArgLen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ArgLen);
      }
      if (rpcHead_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RpcHead);
      }
      if (RpcBody.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RpcBody);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcPacket other) {
      if (other == null) {
        return;
      }
      if (other.FuncName.Length != 0) {
        FuncName = other.FuncName;
      }
      if (other.ArgLen != 0) {
        ArgLen = other.ArgLen;
      }
      if (other.rpcHead_ != null) {
        if (rpcHead_ == null) {
          RpcHead = new global::Rpc.RpcHead();
        }
        RpcHead.MergeFrom(other.RpcHead);
      }
      if (other.RpcBody.Length != 0) {
        RpcBody = other.RpcBody;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FuncName = input.ReadString();
            break;
          }
          case 16: {
            ArgLen = input.ReadInt32();
            break;
          }
          case 26: {
            if (rpcHead_ == null) {
              RpcHead = new global::Rpc.RpcHead();
            }
            input.ReadMessage(RpcHead);
            break;
          }
          case 34: {
            RpcBody = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FuncName = input.ReadString();
            break;
          }
          case 16: {
            ArgLen = input.ReadInt32();
            break;
          }
          case 26: {
            if (rpcHead_ == null) {
              RpcHead = new global::Rpc.RpcHead();
            }
            input.ReadMessage(RpcHead);
            break;
          }
          case 34: {
            RpcBody = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///原始包
  /// </summary>
  public sealed partial class Packet : pb::IMessage<Packet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Packet> _parser = new pb::MessageParser<Packet>(() => new Packet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Packet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rpc.Rpc3Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet(Packet other) : this() {
      id_ = other.id_;
      reply_ = other.reply_;
      buff_ = other.buff_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet Clone() {
      return new Packet(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    ///socketid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Reply" field.</summary>
    public const int ReplyFieldNumber = 2;
    private string reply_ = "";
    /// <summary>
    ///call sessionid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reply {
      get { return reply_; }
      set {
        reply_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Buff" field.</summary>
    public const int BuffFieldNumber = 3;
    private pb::ByteString buff_ = pb::ByteString.Empty;
    /// <summary>
    ///buff
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Buff {
      get { return buff_; }
      set {
        buff_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Packet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Packet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Reply != other.Reply) return false;
      if (Buff != other.Buff) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Reply.Length != 0) hash ^= Reply.GetHashCode();
      if (Buff.Length != 0) hash ^= Buff.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Reply.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Reply);
      }
      if (Buff.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Buff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Reply.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Reply);
      }
      if (Buff.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Buff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Reply.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reply);
      }
      if (Buff.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Buff);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Packet other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Reply.Length != 0) {
        Reply = other.Reply;
      }
      if (other.Buff.Length != 0) {
        Buff = other.Buff;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Reply = input.ReadString();
            break;
          }
          case 26: {
            Buff = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Reply = input.ReadString();
            break;
          }
          case 26: {
            Buff = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///集群信息
  /// </summary>
  public sealed partial class ClusterInfo : pb::IMessage<ClusterInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClusterInfo> _parser = new pb::MessageParser<ClusterInfo>(() => new ClusterInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClusterInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rpc.Rpc3Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterInfo(ClusterInfo other) : this() {
      type_ = other.type_;
      ip_ = other.ip_;
      port_ = other.port_;
      weight_ = other.weight_;
      socketId_ = other.socketId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterInfo Clone() {
      return new ClusterInfo(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Rpc.SERVICE type_ = global::Rpc.SERVICE.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rpc.SERVICE Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Ip" field.</summary>
    public const int IpFieldNumber = 2;
    private string ip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ip {
      get { return ip_; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Port" field.</summary>
    public const int PortFieldNumber = 3;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "Weight" field.</summary>
    public const int WeightFieldNumber = 4;
    private int weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    /// <summary>Field number for the "SocketId" field.</summary>
    public const int SocketIdFieldNumber = 5;
    private uint socketId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SocketId {
      get { return socketId_; }
      set {
        socketId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClusterInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClusterInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Ip != other.Ip) return false;
      if (Port != other.Port) return false;
      if (Weight != other.Weight) return false;
      if (SocketId != other.SocketId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Rpc.SERVICE.None) hash ^= Type.GetHashCode();
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (Weight != 0) hash ^= Weight.GetHashCode();
      if (SocketId != 0) hash ^= SocketId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Rpc.SERVICE.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Ip.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Ip);
      }
      if (Port != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Port);
      }
      if (Weight != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Weight);
      }
      if (SocketId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(SocketId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Rpc.SERVICE.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Ip.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Ip);
      }
      if (Port != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Port);
      }
      if (Weight != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Weight);
      }
      if (SocketId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(SocketId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Rpc.SERVICE.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Ip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (Weight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Weight);
      }
      if (SocketId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SocketId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClusterInfo other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Rpc.SERVICE.None) {
        Type = other.Type;
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.Weight != 0) {
        Weight = other.Weight;
      }
      if (other.SocketId != 0) {
        SocketId = other.SocketId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Rpc.SERVICE) input.ReadEnum();
            break;
          }
          case 18: {
            Ip = input.ReadString();
            break;
          }
          case 24: {
            Port = input.ReadInt32();
            break;
          }
          case 32: {
            Weight = input.ReadInt32();
            break;
          }
          case 40: {
            SocketId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Rpc.SERVICE) input.ReadEnum();
            break;
          }
          case 18: {
            Ip = input.ReadString();
            break;
          }
          case 24: {
            Port = input.ReadInt32();
            break;
          }
          case 32: {
            Weight = input.ReadInt32();
            break;
          }
          case 40: {
            SocketId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
